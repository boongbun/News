function addLoading() { $.blockUI({ message: "Đang tải dữ liệu..." }) } function revLoading() { $.unblockUI() } function addElementText(e, t) { $("#" + e).html(t) } function addElementClass(e, t) { $("#" + e).addClass(t) } function removeAllElementClass(e) { $("#" + e).removeClass() } function removeElementClass(e, t) { $("#" + e).removeClass(t) } function showOrHideElement(e, t) { $("#" + e).css("display", t) } function isNullOrWhitespace(e) { return null === e || void 0 === e || -1 !== "s".indexOf(e) } function isZeroOrUndefined(e) { var t = !1; return (null === e || void 0 === e || e < 1) && (t = !0), t } function autoCloseElement(e) { $("#" + e).fadeTo(2e3, 500).slideUp(500, function () { $("#" + e).slideUp(500) }) } var fetchDataAndBindToLookup = function (e, t, n, i, a, l) { return $.post(e, t, function (e) { if (!e.IsError && (n.removeAll(), ko.mapping.fromJS(e.Data, {}, n), null !== i && void 0 !== i && e.Data.length > 0 && null !== i && void 0 !== i)) if (e.Data[0].hasOwnProperty("children")) { var t = e.Data[0].children; null !== t && void 0 !== t && t.length > 0 ? i(t[0][a]) : i(e.Data[0][a]) } else i(null !== l && void 0 !== l && !0 === l ? e.CurrentSelectedId : e.Data[0][a]) }) }; function showNotificationToFont(e, t) { $.notify({ icon: "add_alert", message: t }, { type: e, timer: 3e3, placement: { from: "bottom", align: "right" } }) } !function (e, t) { t.extenders.numeric = function (e, n) { var i = t.pureComputed({ read: e, write: function (t) { var i = e(), a = Math.pow(10, n), l = isNaN(t) ? 0 : +t, s = Math.round(l * a) / a; s !== i ? e(s) : t !== i && e.notifySubscribers(s) } }).extend({ notify: "always" }); return i(e()), i }, t.bindingHandlers.alertList = { init: function (e, n, i, a, l) { var s = n(), r = i().priority, o = "alert-danger"; "info" === r ? o = "alert-info" : "warning" === r ? o = "alert-warning" : "success" === r && (o = "alert-success"), e.style.display = "none", e.innerHTML = '<button type="button" data-hide="alert" class="close">x</button><h4 class="alert-heading">Error</h4>', e.className = "alert " + o + " alert-dismissable", console.log(s()); var d = document.createElement("ul"); return d.className = "list-unstyled", d.innerHTML = "<li><span data-bind='html: message'></span></li>", e.appendChild(d), t.applyBindingsToNode(d, { foreach: s }), { controlsDescendantBindings: !0 } }, update: function (n, i, a, l, s) { var r = t.utils.unwrapObservable(i()); console.log(r), r.length > 0 ? (alert("ok"), e(n).slideDown()) : e(n).fadeOut("fast") } }, t.bindingHandlers.convertHoursToMinutes = { init: function (n, i) { var a = t.unwrap(i()); a = ((a = isNaN(a) ? 0 : +a) / 60).toFixed(2), e(n).text(a) } }, t.observableArray.fn.refresh = function (e) { var t = this.indexOf(e); t >= 0 && (this.splice(t, 1), this.splice(t, 0, e)) }, t.bindingHandlers.date = { init: function (n, i, a, l, s) { t.bindingHandlers.value.init(n, i, a, l, s); var r, o = a(), d = i(), u = t.utils.unwrapObservable(d), f = "DD/MM/YYYY HH:mm:ss"; "pattern" in o && (f = o.pattern); var m = !1; null !== u && void 0 !== u && u.length > 0 ? (r = moment(u).format(f), m = moment(u).format("DD/MM/YYYY HH:mm:ss").indexOf("01/01/0001") > -1) : u instanceof Date ? m = (r = formatDateTimeToString(u)).indexOf("01/01/0001") > -1 : r = "", "textIfMinDate" in o && (isNullOrWhitespace(r) || m) && (r = o.textIfMinDate), "textBesideIfValidValue" in o && !isNullOrWhitespace(r) && m && (r = o.textBesideIfValidValue + r), !0 === e(n).is("input") ? e(n).val(r) : e(n).text(r) }, update: function (n, i, a) { var l, s = a(), r = i(), o = t.utils.unwrapObservable(r), d = "DD/MM/YYYY HH:mm:ss"; "pattern" in s && (d = s.pattern); var u = !1; null !== o && void 0 !== o && o.length > 0 ? (l = moment(o).format(d), u = moment(o).format("DD/MM/YYYY HH:mm:ss").indexOf("01/01/0001") > -1) : o instanceof Date ? u = (l = formatDateTimeToString(o)).indexOf("01/01/0001") > -1 : l = "", "textIfMinDate" in s && (isNullOrWhitespace(l) || u) && (l = s.textIfMinDate), "textBesideIfValidValue" in s && !isNullOrWhitespace(l) && u && (l = s.textBesideIfValidValue + l), !0 === e(n).is("input") ? e(n).val(l) : e(n).text(l) } }, t.bindingHandlers.dateOnly = { init: function (n, i, a, l, s) { t.bindingHandlers.value.init(n, i, a, l, s); var r, o = a(), d = i(), u = t.utils.unwrapObservable(d), f = "DD/MM/YYYY"; "pattern" in o && (f = o.pattern), r = null !== u && void 0 !== u && u.length > 0 ? moment(u).format(f) : u instanceof Date ? formatDateTimeToString(u) : "", "textIfMinDate" in o && (isNullOrWhitespace(r) || r.indexOf("01/01/0001") > -1) && (r = o.textIfMinDate), "textBesideIfValidValue" in o && !isNullOrWhitespace(r) && -1 === r.indexOf("01/01/0001") && (r = o.textBesideIfValidValue + r), !0 === e(n).is("input") ? e(n).val(r) : e(n).text(r) }, update: function (n, i, a) { var l, s = a(), r = i(), o = t.utils.unwrapObservable(r), d = "DD/MM/YYYY"; "pattern" in s && (d = s.pattern), l = null !== o && void 0 !== o && o.length > 0 ? moment(o).format(d) : o instanceof Date ? formatDateTimeToString(o) : "", "textIfMinDate" in s && (isNullOrWhitespace(l) || l.indexOf("01/01/0001") > -1) && (l = s.textIfMinDate), "textBesideIfValidValue" in s && !isNullOrWhitespace(l) && -1 === l.indexOf("01/01/0001") && (l = s.textBesideIfValidValue + l), !0 === e(n).is("input") ? e(n).val(l) : e(n).text(l) } }, t.bindingHandlers.date24 = { init: function (n, i, a, l, s) { t.bindingHandlers.value.init(n, i, a, l, s); var r, o = a(), d = i(), u = t.utils.unwrapObservable(d), f = "DD/MM/YYYY HH:mm:ss"; "pattern" in o && (f = o.pattern), r = null !== u && void 0 !== u && u.length > 0 ? moment(u).format(f) : u instanceof Date ? formatDateTimeToString(u) : "", "textIfMinDate" in o && (isNullOrWhitespace(r) || r.indexOf("01/01/0001") > -1) && (r = o.textIfMinDate), "textBesideIfValidValue" in o && !isNullOrWhitespace(r) && -1 === r.indexOf("01/01/0001") && (r = o.textBesideIfValidValue + r), !0 === e(n).is("input") ? e(n).val(r) : e(n).text(r) }, update: function (n, i, a) { var l, s = a(), r = i(), o = t.utils.unwrapObservable(r), d = "DD/MM/YYYY HH:mm:ss"; "pattern" in s && (d = s.pattern), l = null !== o && void 0 !== o && o.length > 0 ? moment(o).format(d) : o instanceof Date ? formatDateTimeToString(o) : "", "textIfMinDate" in s && (isNullOrWhitespace(l) || l.indexOf("01/01/0001") > -1) && (l = s.textIfMinDate), "textBesideIfValidValue" in s && !isNullOrWhitespace(l) && -1 === l.indexOf("01/01/0001") && (l = s.textBesideIfValidValue + l), !0 === e(n).is("input") ? e(n).val(l) : e(n).text(l) } }; var n = { loadTemplate: function (n, i, a) { if (i.fromUrl) { var l = i.fromUrl; e.get(l, function (e) { t.components.defaultLoader.loadTemplate(n, e, a) }) } else a(null) } }; t.components.loaders.unshift(n) }(jQuery, ko);
$(function () { var e = window.location.pathname, a = e.substring(e.lastIndexOf("/") + 1); $("div.sidebar-wrapper ul.nav li a").each(function () { var e = this.href.substring(this.href.lastIndexOf("/") + 1); a == e && $(this).parent().addClass("active") }), $("div.sidebar-wrapper ul .collapse ul li a").each(function () { var e = this.href.substring(this.href.lastIndexOf("/") + 1); a == e && $(this).parent().parent().parent().addClass("in") }) });
function downloadFileToClient(filename, data, contentType) {
    var a = document.createElement('a');
    a.style = "display: none";
    var byteCharacters = atob(data);
    var byteNumbers = new Array(byteCharacters.length);
    for (var i = 0; i < byteCharacters.length; i++) {
        byteNumbers[i] = byteCharacters.charCodeAt(i);
    }
    var byteArray = new Uint8Array(byteNumbers);
    var blob = new Blob([byteArray], { type: contentType });
    var url = window.URL.createObjectURL(blob);
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    setTimeout(function () {
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);
    }, 100);
};
function ToogleCurrentMainCursor() {
    $('#MainLayoutCurrent').hasClass('set-cursor-waitting')
        ? $('#MainLayoutCurrent').removeClass('set-cursor-waitting')
        : $('#MainLayoutCurrent').addClass('set-cursor-waitting');
};
function SetCurrentMainCursor() {

};

